# 외계인은 손가락 수십억개 가지고 있음
# 보통 기타는 1번 줄부터 6번 줄까지 총 6개의 줄이 있고, 각 줄은 P개의 프렛으로 나눠짐
# 프렛의 번호도 1번부터 P번까지 나눠져 있음
#
# 멜로디는 음의 연속, 각 음은 줄에서 해당하는 프렛 누르고 줄 튕기면 연주
# ex. 4번 줄의 8번 프렛을 누르고 튕길 수 있음
# 만약 어떤 줄의 프렛 여러 개 누르고 있다면, 가장 높은 프렛의 음이 발생
# ex. 3번 줄의 5번 프렛을 이미 누르고 있는데 7번 프렛을 누른 음 연주
# -> 5번 프렛을 누르는 손을 떼지 않고 다른 손가락으로 7번 프렛 누르고 줄 튕기면 됨
# 여기서 2번 프렛의 음 연주하려고 한다면, 5번과 7번을 누르던 손가랃 뗀 다음 2번 프렛 누르고 연주
#
# -> 손가락으로 프렛 한 번 누르거나 떼는 것을 손가락 한 번 움직였다고 함
# => 어떤 멜로디가 주어졌을 때, 손가락의 가장 적게 움직이는 횟수를 구하는 프로그램
#
# 첫째 줄: 멜로디에 포함되어 있는 음의 수 N, 한 줄에 있는 프렛의 수 P
# ( 1 <= N <= 500,000, 2 <= P <= 300,000)
# 다음 N개 줄: 멜로디의 한 음을 나타내는 두 정수 주어짐
# -> 첫 번째 정수: 줄의 번호, 두 번째 정수는 그 줄에서 눌러야 하는 프렛의 번호
# => 입력으로 주어진 음의 순서대로 기타 연주
# (줄의 번호 <= N, 자연수, 프렛의 번호 <= P, 자연수)
#
# 첫째 줄에 멜로디를 연주하는데 필요한 최소 손가락 움직임 출력

import sys

input = sys.stdin.readline
N, P = map(int, input().split())
stk = [[] for _ in range(7)]
ans = 0
for _ in range(N):
    line, p = map(int, input().split())
    while stk[line] and stk[line][-1] > p:
        stk[line].pop()
        ans += 1

    if stk[line] and stk[line] == p:
        continue

    stk[line].append(p)
    ans += 1

print(ans)